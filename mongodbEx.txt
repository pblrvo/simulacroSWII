1. En sample_training.zips ¿Cuántas colecciones tienen menos de 1000 personas en el campo pop? (sol. 8065)
db.zips.countDocuments({pop: {$gte: 1000}})

2. En sample_training.trips ¿Cuál es la diferencia entre la gente que nació en 1998 y la que nació después de 1998? (sol.6)
db.trips.find({"birth year": {$gt: 1998}}).count() - db.trips.find({"birth year": 1998}).count()

3. En sample_training.routes ¿Cuántas rutas tienen al menos una parada? (sol. 11)
db.routes.countDocuments({stops: {$gte: 1}})

4. En sample_training.inspections ¿Cuántos negocios tienen un resultado de inspección "Out of Business" y
pertenecen al sector "Home Improvement Contractor - 100"? (sol. 4)
db.inspections.countDocuments({$and: [{result: "Out of Business", sector: "Home Improvement Contractor - 100"}]})

5. En sample_training.inspections ¿Cuántos documentos hay con fecha de inspección "Feb 20 2015" o "Feb 21 2015" y
cuyo sector no sea "Cigarette Retail Dealer - 127"? (sol.204)
db.inspections.countDocuments({$and: [{$or: [{date: "Feb 20 2015"}, {date: "Feb 21 2015"}]}, {sector: {$ne: "Cigarette Retail Dealer - 127"}}]})

1. En sample_training.companies, ¿cuántas empresas tienen más empleados que el año en el que se fundaron? (sol. 324)
db.companies.countDocuments({$expr: {$gt: ["$number_of_employees", "$founded_year"]}})

2. En sample_training.companies, ¿en cuántas empresas coinciden su permalink con su twitter_username? (sol.1299)
db.companies.countDocuments({$expr: {$eq: ["$permalink", "$twitter_username"]}})

3. En sample_airbnb.listingsAndReviews, ¿cuál es el nombre del alojamiento en el que pueden estar más de 6 personas
alojadas y tiene exactamente 50 reviews? (sol. Sunset Beach Lodge Retreat)
db.listingsAndReviews.find({accommodates: {$gt: 6}, number_of_reviews: {$eq: 50}}, {_id: 0, name: 1})

4. En sample_airbnb.listingsAndReviews, ¿cuántos documentos tienen el "property_type" "House" e incluyen
"Changing table" como una de las "amenities"? (sol. 11)
b.listingsAndReviews.countDocuments({property_type: "House", amenities: "Changing table"})

5. En sample_training.companies, ¿Cuántas empresas tienen oficinas en Seattle? (sol. 117)
db.companies.countDocuments({"offices.city": "Seattle"})

6. En sample_training.companies, haga una query que devuelva únicamente el nombre de las empresas que tengan
exactamente 8 "funding_rounds"
db.companies.find({funding_rounds: {$size: 8}}, {_id: 0, name: 1})

7. En sample_training.trips, ¿cuántos viajes empiezan en estaciones que están al oeste de la longitud -74? (sol. 1928)
Nota 1: Hacia el oeste la longitud decrece
Nota 2: el formato es <field_name>: [ <longitud>, <latitud> ]
db.trips.countDocuments({"start station location.coordinates.0": {$lt: -74}})

8. En sample_training.inspections, ¿cuántas inspecciones se llevaron a cabo en la ciudad de "NEW YORK"? (sol. 18279)
db.inspections.countDocuments({"address.city": "NEW YORK"})

9. En sample_airbnb.listingsAndReviews, haga una query que devuelva el nombre y la dirección de los alojamientos que
tengan "Internet" como primer elemento de "amenities"
db.listingsAndReviews.find({"amenities.0": "Internet"}, {_id: 0, name: 1, address: 1})

1. En sample_airbnb.listingsAndReviews, ¿qué "room types" existen?
db.listingsAndReviews.distinct("room_type")

2. En sample_training.companies, haga una query que devuelva el nombre y el año en el que se fundaron las 5
compañías más antiguas.
db.companies.find({founded_year: {$ne: null}}, {name: 1, founded_year: 1, _id: 0}).sort({founded_year: 1})

3. En sample_training.trips, ¿en qué año nació el ciclista más
joven? (sol. 1999)
db.trips.find({"birth year": {$ne: ''}}, {"birth year": 1, _id: 0}).sort({"birth year": -1}).limit(1)